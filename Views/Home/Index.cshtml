@{
    ViewData["Title"] = "Home Page";
}

<div class="home-container">

    <h1 class="home-titulo titulo">AstroGenerator</h1>

    <p class="home-paragrafo paragrafo">Use AstroGenerator to explore and learn about different astronomical topics.
        Insert TAGs, base texts and references, click 'Generate' and instantly get questions and answers generated.
        Uncover the secrets of the universe in a practical and intuitive way.</p>

    <div class="home-inputBox">
        <input class="home-input input" type="text" id="textoEntrada">
        <button type="button" class="home-botao botao" onclick="enviarFormulario()">Generate</button>
    </div>

</div>

<div class="home-status">
    <div class="home-statusBox">    
        <p class="home-paragrafo paragrafo" id="paragrafoStatus"><strong>Status</strong> This is where the status of the generated question will appear.</p>
    </div>
</div>


@* <div class="home-questao">
    <div class="home-enunciado">
        <h4 class="home-titulo titulo">Astronomy Question</h4>
        <p class="home-paragrafo questao-paragrafo paragrafo">This is where the generated question about the
            astronomical topic will appear.
        </p>
    </div>
    <div class="home-alternativas alternativas">
        <button class="alternativa">option 1</button>
        <button class="alternativa">option 2</button>
        <button class="alternativa">option 3</button>
        <button class="alternativa">option 4</button>
    </div>
</div> *@



<script>

let intervalId; // Variável para armazenar o ID do intervalo

function enviarFormulario() {
    // Obter o valor do campo do formulário
    var textoEntrada = document.getElementById("textoEntrada").value;

    // Criar um objeto FormData
    var formData = new FormData();
    formData.append('textoEntrada', textoEntrada);

    fetch("http://localhost:5084/api/Requisicoes/IniciarRequisicao", {
        method: "POST",
        body: formData
    })
    .then(function (response) {
        if (response.ok) {
            return response.text();
        } else {
            throw new Error("Requisição falhou");
        }
    })
    .then(function (idRequisicao) {
        // Remover aspas do início e do fim da string (se existirem)
        idRequisicao = idRequisicao.replace(/^"(.*)"$/, "$1");

        // Limpar o intervalo anterior antes de iniciar um novo
        clearInterval(intervalId);

        // Alterar o conteúdo do elemento p em caso de sucesso
        var paragrafoStatus = document.getElementById("paragrafoStatus");
        paragrafoStatus.innerHTML = `<strong>Requisição</strong> criada. ID da requisição: ${idRequisicao}`;

        // Criar o botão "Consultar"
        var botaoConsultar = document.createElement("button");
        botaoConsultar.type = "button";
        botaoConsultar.className = "home-botao botao";
        botaoConsultar.textContent = "Consultar";
        botaoConsultar.onclick = function() {
            consultarRequisicao(idRequisicao);
        };

        // Adicionar o botão ao parágrafo
        paragrafoStatus.appendChild(botaoConsultar);

        // Iniciar o intervalo a cada 5 segundos
        intervalId = setInterval(function () {
            consultarRequisicao(idRequisicao);
        }, 5000); // 5000 milissegundos = 5 segundos
    })
    .catch(function (error) {
        // Alterar o conteúdo do elemento p em caso de erro
        document.getElementById("paragrafoStatus").innerHTML = `<strong>Erro na requisição:</strong> ${error.message}`;
    });
}

function consultarRequisicao(idRequisicao) {
    fetch(`http://localhost:5084/api/Requisicoes/ConsultarRequisicao?id=${idRequisicao}`, {
        method: "GET"
    })
    .then(function (response) {
        if (response.ok) {
            return response.json();
        } else {
            throw new Error("Consulta de requisição falhou");
        }
    })
    .then(function (requisicao) {
        // Formatar a data para exibição amigável
        var dataInicioFormatada = new Date(requisicao.dataInicio).toLocaleString();

        // Atualizar o conteúdo do elemento p com as informações recebidas
        var paragrafoStatus = document.getElementById("paragrafoStatus");
        paragrafoStatus.innerHTML = `
            <strong>Dados da Requisição:</strong><br>
            ID: ${requisicao.id}<br>
            Status: ${requisicao.status}<br>
            Data Início: ${dataInicioFormatada}<br>
            Data Fim: ${requisicao.dataFim}<br>
            Validade: ${requisicao.valided ? 'Sim' : 'Não'}
        `;
    })
    .catch(function (error) {
        // Lógica para lidar com erros na consulta de requisição
        alert("Ocorreu um erro na consulta de requisição: " + error.message);
    });
}

</script>
